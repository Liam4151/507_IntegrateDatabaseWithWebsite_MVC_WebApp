// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TypicalTools.Models;

#nullable disable

namespace TypicalTools.Migrations
{
    [DbContext(typeof(ContextModel))]
    [Migration("20230415072710_Data Insert")]
    partial class DataInsert
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TypicalTools.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Password");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("TypicalTools.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductCode")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TypicalTools.Models.Product", b =>
                {
                    b.Property<int>("ProductCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCode"), 1L, 1);

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductCode");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductCode = 12345,
                            ProductDescription = "bluetooth headphones with fair battery life and a 1 month warranty",
                            ProductName = "Generic Headphones",
                            ProductPrice = 84.99m,
                            UpdatedDate = new DateTime(2023, 4, 15, 17, 27, 9, 888, DateTimeKind.Local).AddTicks(1144)
                        },
                        new
                        {
                            ProductCode = 12346,
                            ProductDescription = "bluetooth headphones with good battery life and a 6 month warranty",
                            ProductName = "Expensive Headphones",
                            ProductPrice = 149.99m,
                            UpdatedDate = new DateTime(2023, 4, 15, 17, 27, 9, 888, DateTimeKind.Local).AddTicks(1147)
                        },
                        new
                        {
                            ProductCode = 12347,
                            ProductDescription = "bluetooth headphones with good battery life and a 12 month warranty",
                            ProductName = "Name Brand Headphones",
                            ProductPrice = 199.99m,
                            UpdatedDate = new DateTime(2023, 4, 15, 17, 27, 9, 888, DateTimeKind.Local).AddTicks(1149)
                        },
                        new
                        {
                            ProductCode = 12348,
                            ProductDescription = "simple bluetooth pointing device",
                            ProductName = "Generic Wireless Mouse",
                            ProductPrice = 39.99m,
                            UpdatedDate = new DateTime(2023, 4, 15, 17, 27, 9, 888, DateTimeKind.Local).AddTicks(1151)
                        },
                        new
                        {
                            ProductCode = 12349,
                            ProductDescription = "mouse and keyboard wired combination",
                            ProductName = "Logitach Mouse and Keyboard",
                            ProductPrice = 73.99m,
                            UpdatedDate = new DateTime(2023, 4, 15, 17, 27, 9, 888, DateTimeKind.Local).AddTicks(1152)
                        },
                        new
                        {
                            ProductCode = 12350,
                            ProductDescription = "quality wireless mouse",
                            ProductName = "Logitach Wireless Mouse",
                            ProductPrice = 149.99m,
                            UpdatedDate = new DateTime(2023, 4, 15, 17, 27, 9, 888, DateTimeKind.Local).AddTicks(1154)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
